package rules;

import com.example.entity.ProductFeatureValue;
import com.example.validation.rule.ValidationRule;
import com.example.validation.rule.ValidationRule.RuleType;
import java.util.List;
import java.util.regex.Pattern;

global List validationErrors;

rule "Required Value Check"
    when
        $rule: ValidationRule(required == true)
        $value: ProductFeatureValue(
            stringValue == null && numericValue == null && 
            booleanValue == null && attributeValue == null
        )
    then
        validationErrors.add("Value is required but not provided");
end

rule "Pattern Validation"
    when
        $rule: ValidationRule(ruleType == RuleType.PATTERN, pattern != null)
        $value: ProductFeatureValue(stringValue != null)
        eval(!Pattern.compile($rule.getPattern()).matcher($value.getStringValue()).matches())
    then
        validationErrors.add("Value does not match required pattern: " + $rule.getPattern());
end

rule "Range Validation"
    when
        $rule: ValidationRule(ruleType == RuleType.RANGE)
        $value: ProductFeatureValue(numericValue != null)
        eval(
            ($rule.getMinValue() != null && $value.getNumericValue() < $rule.getMinValue()) ||
            ($rule.getMaxValue() != null && $value.getNumericValue() > $rule.getMaxValue())
        )
    then
        validationErrors.add("Value is outside allowed range [" + 
            $rule.getMinValue() + " - " + $rule.getMaxValue() + "]");
end

rule "Enumeration Validation"
    when
        $rule: ValidationRule(ruleType == RuleType.ENUMERATION, allowedValues != null)
        $value: ProductFeatureValue(stringValue != null)
        eval(!$rule.getAllowedValues().contains($value.getStringValue()))
    then
        validationErrors.add("Value is not in the list of allowed values: " + 
            String.join(", ", $rule.getAllowedValues()));
end

rule "Length Validation"
    when
        $rule: ValidationRule(ruleType == RuleType.LENGTH)
        $value: ProductFeatureValue(stringValue != null)
        eval(
            $value.getStringValue().length() < $rule.getMinLength() ||
            $value.getStringValue().length() > $rule.getMaxLength()
        )
    then
        validationErrors.add("Value length must be between " + 
            $rule.getMinLength() + " and " + $rule.getMaxLength());
end
